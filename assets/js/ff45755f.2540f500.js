"use strict";(self.webpackChunkti_engine_docs=self.webpackChunkti_engine_docs||[]).push([[215],{5171:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"howto/bulk-vs-single","title":"When to choose bulk vs single functions in ti-engine","description":"This guide shows when to choose the bulk version of a function or the single version of a function using the JavaScript package ti-engine.","source":"@site/docs/howto/bulk-vs-single.md","sourceDirName":"howto","slug":"/howto/bulk-vs-single","permalink":"/docs/docs/howto/bulk-vs-single","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"How-To Guides","permalink":"/docs/docs/howto/"},"next":{"title":"How to determine the best ConstantModelType for a ti-engine function","permalink":"/docs/docs/howto/choose-constant-model"}}');var t=i(4848),o=i(8453);const l={},a="When to choose bulk vs single functions in ti-engine",r={},c=[{value:"\ud83c\udfaf Goal",id:"-goal",level:2},{value:"\ud83d\udce6 Requirements",id:"-requirements",level:2},{value:"\ud83d\udcbb Step-by-Step",id:"-step-by-step",level:2},{value:"1. What period are you using?",id:"1-what-period-are-you-using",level:3},{value:"2. Observe the data",id:"2-observe-the-data",level:3},{value:"3. What is your goal?",id:"3-what-is-your-goal",level:3},{value:"4. Example (RSI)",id:"4-example-rsi",level:3},{value:"\ud83e\uddea Example Output",id:"-example-output",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"when-to-choose-bulk-vs-single-functions-in-ti-engine",children:"When to choose bulk vs single functions in ti-engine"})}),"\n",(0,t.jsx)(n.p,{children:"This guide shows when to choose the bulk version of a function or the single version of a function using the JavaScript package ti-engine."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-goal",children:"\ud83c\udfaf Goal"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Understand when to use bulk or single functions"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-requirements",children:"\ud83d\udce6 Requirements"}),"\n",(0,t.jsx)(n.p,{children:"Install ti-engine:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# npm\nnpm install ti-engine\n\n# yarn\nyarn add ti-engine\n\n# pnpm\npnpm add ti-engine\n"})}),"\n",(0,t.jsx)(n.p,{children:"Initialize (recommended especially in browsers):"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'import init from "ti-engine";\n\nawait init(); // In Node it\'s a no-op; in browsers it loads WASM\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-step-by-step",children:"\ud83d\udcbb Step-by-Step"}),"\n",(0,t.jsx)(n.h3,{id:"1-what-period-are-you-using",children:"1. What period are you using?"}),"\n",(0,t.jsx)(n.p,{children:"Determine how much time (period) you want to include when computing the indicator (e.g., RSI period = 14)."}),"\n",(0,t.jsx)(n.h3,{id:"2-observe-the-data",children:"2. Observe the data"}),"\n",(0,t.jsx)(n.p,{children:"Do you have just enough data to cover the period?"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"If yes, you\u2019ll only be able to calculate a single value for the indicator."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Do you have extra data?"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"If yes, you\u2019ll be able to calculate multiple values over time (historical series)."}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"3-what-is-your-goal",children:"3. What is your goal?"}),"\n",(0,t.jsx)(n.p,{children:"Will previous values for the indicator help you make a decision?"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"If yes, make sure you collect enough data to compute previous values (use bulk)."}),"\n",(0,t.jsx)(n.li,{children:"If no (e.g., streaming updates), compute just the latest value (use single)."}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"4-example-rsi",children:"4. Example (RSI)"}),"\n",(0,t.jsx)(n.p,{children:"The default RSI often uses 14 previous prices. If you have 53 days of data you can:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Use the bulk function to calculate the historical RSIs."}),"\n",(0,t.jsx)(n.li,{children:"When a new price comes in, use the single function on the latest window."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'import init, { momentumIndicators, ConstantModelType } from "ti-engine";\n\nawait init();\n\n// 53 example closing prices\nconst data = [\n  6037.59, 5970.84, 5906.94, 5881.63, 5868.55, 5942.47, 5975.38, 5909.03,\n  5918.25, 5827.04, 5836.22, 5842.91, 5949.91, 5937.34, 5996.66, 6049.24,\n  6086.37, 6118.71, 6101.24, 6012.28, 6067.70, 6039.31, 6071.17, 6040.53,\n  5994.57, 6037.88, 6061.48, 6083.57, 6025.99, 6066.44, 6068.50, 6051.97,\n  6115.07, 6114.63, 6129.58, 6144.15, 6117.52, 6013.13, 5983.25, 5955.25,\n  5956.06, 5861.57, 5954.50, 5849.72, 5778.15, 5842.63, 5738.52, 5770.20,\n  5614.56, 5572.07, 5599.30, 5521.52, 5638.94\n];\n\nconst period = 14;\nconst model = ConstantModelType.SmoothedMovingAverage; // also see other options below\n\n// 1) Bulk: compute historical RSI values\nconst rsiSeries = momentumIndicators.bulk.relativeStrengthIndex(data, model, period);\nconsole.log("Bulk RSIs:", rsiSeries);\n\n// 2) Single: compute the next/latest RSI when a new price arrives\nconst newPrice = 5769.21;\ndata.push(newPrice);\n\n// For period=14, use the latest 14 prices for single RSI\nconst latestWindow = data.slice(-period);\nconst latestRsi = momentumIndicators.single.relativeStrengthIndex(latestWindow, model);\nconsole.log("Single RSI:", latestRsi);\n'})}),"\n",(0,t.jsx)(n.p,{children:"Notes:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Valid ConstantModelType values:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"ConstantModelType.SimpleMovingAverage"}),"\n",(0,t.jsx)(n.li,{children:"ConstantModelType.SmoothedMovingAverage"}),"\n",(0,t.jsx)(n.li,{children:"ConstantModelType.ExponentialMovingAverage"}),"\n",(0,t.jsx)(n.li,{children:"ConstantModelType.SimpleMovingMedian"}),"\n",(0,t.jsx)(n.li,{children:"ConstantModelType.SimpleMovingMode"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Tip (standard 14-period RSI):","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"standardIndicators.single.rsi(pricesOfLength14) // exactly 14 values"}),"\n",(0,t.jsx)(n.li,{children:"standardIndicators.bulk.rsi(allPrices)          // rolling 14 over the series"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-example-output",children:"\ud83e\uddea Example Output"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"Bulk RSIs: [47.49434607156126, 50.3221945432267, ..., 40.34609500741716]\nSingle RSI: 48.00106962275036\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Use bulk when: calculating many historical values, initial setup, backtesting"}),"\n",(0,t.jsx)(n.li,{children:"Use single when: real-time updates, streaming data, memory constraints"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>a});var s=i(6540);const t={},o=s.createContext(t);function l(e){const n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);