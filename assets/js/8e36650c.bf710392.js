"use strict";(self.webpackChunkti_engine_docs=self.webpackChunkti_engine_docs||[]).push([[929],{3473:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>g,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"tutorials/getting-started","title":"Tutorial 1: Getting started with ti-engine","description":"Leverage Rust-powered speed from JavaScript \u2014 compute indicators directly on plain arrays.","source":"@site/docs/tutorials/getting-started.md","sourceDirName":"tutorials","slug":"/tutorials/getting-started","permalink":"/docs/docs/tutorials/getting-started","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"How to use McGinley Dynamic in ti-engine","permalink":"/docs/docs/howto/mcginley-dynamic"},"next":{"title":"Tutorial 2: Visualizing Indicators with Plotly","permalink":"/docs/docs/tutorials/plotting"}}');var t=i(4848),l=i(8453);const r={},o="Tutorial 1: Getting started with ti-engine",a={},d=[{value:"\ud83c\udfaf What you\u2019ll learn",id:"-what-youll-learn",level:2},{value:"\ud83d\udce6 Prerequisites",id:"-prerequisites",level:2},{value:"\ud83e\uddf1 Library structure (quick recap)",id:"-library-structure-quick-recap",level:2},{value:"\ud83d\udce5 Data",id:"-data",level:2},{value:"\u2705 Example 1: Simple Moving Average (SMA)",id:"-example-1-simple-moving-average-sma",level:2},{value:"\u2705 Example 2: Moving Constant Bands (generic Bollinger-like bands)",id:"-example-2-moving-constant-bands-generic-bollinger-like-bands",level:2},{value:"\u2705 Example 3: Relative Strength Index (RSI)",id:"-example-3-relative-strength-index-rsi",level:2},{value:"\u2705 Example 4: Average True Range (ATR)",id:"-example-4-average-true-range-atr",level:2},{value:"\ud83d\udee0\ufe0f Alignment and windows",id:"\ufe0f-alignment-and-windows",level:2},{value:"\ud83e\uddea Single vs Bulk \u2014 when to choose",id:"-single-vs-bulk--when-to-choose",level:2},{value:"\u2699\ufe0f Tips",id:"\ufe0f-tips",level:2},{value:"\u2705 Next step",id:"-next-step",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"tutorial-1-getting-started-with-ti-engine",children:"Tutorial 1: Getting started with ti-engine"})}),"\n",(0,t.jsx)(n.p,{children:"Leverage Rust-powered speed from JavaScript \u2014 compute indicators directly on plain arrays."}),"\n",(0,t.jsx)(n.p,{children:"This tutorial is the first in a series:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"01 - Getting started with ti-engine (this page)"}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/docs/docs/tutorials/plotting",children:"02 - Plotting your indicators"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/docs/docs/tutorials/advanced",children:"03 - More advanced use cases"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/docs/docs/tutorials/api",children:"04 - Getting data from an API"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/docs/docs/tutorials/websockets",children:"05 - Real-time updates with WebSockets (single vs bulk)"})}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-what-youll-learn",children:"\ud83c\udfaf What you\u2019ll learn"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Install and initialize ti-engine"}),"\n",(0,t.jsx)(n.li,{children:"Understand the single vs bulk API style"}),"\n",(0,t.jsxs)(n.li,{children:["Compute:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Simple Moving Average (SMA)"}),"\n",(0,t.jsx)(n.li,{children:"Moving Constant Bands (generic Bollinger-like bands)"}),"\n",(0,t.jsx)(n.li,{children:"Relative Strength Index (RSI)"}),"\n",(0,t.jsx)(n.li,{children:"Average True Range (ATR)"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"Handle window alignment and common pitfalls"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-prerequisites",children:"\ud83d\udce6 Prerequisites"}),"\n",(0,t.jsx)(n.p,{children:"Install ti-engine:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# npm\nnpm install ti-engine\n\n# yarn\nyarn add ti-engine\n\n# pnpm\npnpm add ti-engine\n"})}),"\n",(0,t.jsx)(n.p,{children:"Initialize (required in browsers; a no-op in Node for parity):"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'import init from "ti-engine";\nawait init();\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-library-structure-quick-recap",children:"\ud83e\uddf1 Library structure (quick recap)"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Namespaces group indicators by families:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"movingAverage, momentumIndicators, candleIndicators, otherIndicators, trendIndicators, strengthIndicators, volatilityIndicators, correlationIndicators, chartTrends"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Each indicator namespace typically exposes:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"single: full-window, scalar/tuple output"}),"\n",(0,t.jsx)(n.li,{children:"bulk: rolling windows, vector output (length L - N + 1 for window N)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Enums you\u2019ll use frequently:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"MovingAverageType: Simple, Smoothed, Exponential"}),"\n",(0,t.jsx)(n.li,{children:"ConstantModelType: SimpleMovingAverage, SmoothedMovingAverage, ExponentialMovingAverage, SimpleMovingMedian, SimpleMovingMode"}),"\n",(0,t.jsx)(n.li,{children:"DeviationModel: StandardDeviation, MeanAbsoluteDeviation, MedianAbsoluteDeviation, ModeAbsoluteDeviation, UlcerIndex"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-data",children:"\ud83d\udce5 Data"}),"\n",(0,t.jsx)(n.p,{children:"We\u2019ll use a constant array for Close prices. For ATR, we\u2019ll derive simple High/Low arrays from Close just for demonstration (use real OHLC in practice)."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"// Close prices\nconst close = [\n  6037.59, 5970.84, 5906.94, 5881.63, 5868.55, 5942.47, 5975.38, 5909.03,\n  5918.25, 5827.04, 5836.22, 5842.91, 5949.91, 5937.34, 5996.66, 6049.24,\n  6086.37, 6118.71, 6101.24, 6012.28, 6067.70, 6039.31, 6071.17, 6040.53,\n  5994.57, 6037.88, 6061.48, 6083.57, 6025.99, 6066.44, 6068.50, 6051.97,\n  6115.07, 6114.63, 6129.58, 6144.15, 6117.52, 6013.13, 5983.25, 5955.25,\n  5956.06, 5861.57, 5954.50, 5849.72, 5778.15, 5842.63, 5738.52, 5770.20,\n  5614.56, 5572.07, 5599.30, 5521.52, 5638.94\n];\n\n// Synthetic High/Low for ATR demo (replace with real OHLC in practice)\nconst high = close.map(v => v + 20);\nconst low  = close.map(v => v - 20);\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-example-1-simple-moving-average-sma",children:"\u2705 Example 1: Simple Moving Average (SMA)"}),"\n",(0,t.jsx)(n.p,{children:"Helpers live under movingAverage. Use MovingAverageType to pick Simple/Smoothed/Exponential."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'import init, { movingAverage, MovingAverageType } from "ti-engine";\nawait init();\n\n// Single: average over the full array\nconst smaAll = movingAverage.single.movingAverage(close, MovingAverageType.Simple);\nconsole.log("Full-series SMA:", smaAll);\n\n// Bulk: rolling SMA with period=20\nconst periodSMA = 20;\nconst smaSeries = movingAverage.bulk.movingAverage(close, MovingAverageType.Simple, periodSMA);\nconsole.log(`SMA(${periodSMA}) series length:`, smaSeries.length);\n// Alignment tip: smaSeries[0] corresponds to close[0..19] and anchors at close[19]\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-example-2-moving-constant-bands-generic-bollinger-like-bands",children:"\u2705 Example 2: Moving Constant Bands (generic Bollinger-like bands)"}),"\n",(0,t.jsx)(n.p,{children:"Bands around a moving \u201cconstant\u201d (e.g., EMA) using a deviation model (e.g., StdDev). Outputs are [lower, middle, upper]."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'import init, {\n  candleIndicators,\n  ConstantModelType,\n  DeviationModel\n} from "ti-engine";\nawait init();\n\nconst periodBands = 20;\nconst constantModel = ConstantModelType.ExponentialMovingAverage;\nconst deviationModel = DeviationModel.StandardDeviation;\nconst deviationMultiplier = 2.0;\n\n// Single (latest window)\nconst latestWindow = close.slice(-periodBands);\nconst [lower1, middle1, upper1] = candleIndicators.single.movingConstantBands(\n  latestWindow,\n  constantModel,\n  deviationModel,\n  deviationMultiplier\n);\nconsole.log("Latest MCB (single):", lower1, middle1, upper1);\n\n// Bulk (rolling across the whole series)\nconst bands = candleIndicators.bulk.movingConstantBands(\n  close,\n  constantModel,\n  deviationModel,\n  deviationMultiplier,\n  periodBands\n);\n// bands[i] => [lower, middle, upper] for window close[i..i+periodBands-1], anchored at close[i+periodBands-1]\nconst [lowerLast, middleLast, upperLast] = bands[bands.length - 1];\nconsole.log("Last MCB (bulk):", lowerLast, middleLast, upperLast);\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-example-3-relative-strength-index-rsi",children:"\u2705 Example 3: Relative Strength Index (RSI)"}),"\n",(0,t.jsx)(n.p,{children:"Use momentumIndicators with a ConstantModelType (SmoothedMovingAverage is the common default in many RSI formulations)."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'import init, { momentumIndicators, ConstantModelType } from "ti-engine";\nawait init();\n\nconst periodRSI = 14;\nconst rsiSeries = momentumIndicators.bulk.relativeStrengthIndex(\n  close,\n  ConstantModelType.SmoothedMovingAverage,\n  periodRSI\n);\nconsole.log(`RSI(${periodRSI}) length:`, rsiSeries.length);\n\n// Latest RSI using single on the last window\nconst rsiLatest = momentumIndicators.single.relativeStrengthIndex(\n  close.slice(-periodRSI),\n  ConstantModelType.SmoothedMovingAverage\n);\nconsole.log("Latest RSI (single):", rsiLatest);\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-example-4-average-true-range-atr",children:"\u2705 Example 4: Average True Range (ATR)"}),"\n",(0,t.jsx)(n.p,{children:"ATR measures average true range of movement; provide aligned arrays for previous close, high, and low. You can choose the averaging model (e.g., ExponentialMovingAverage) and a window."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'import init, { otherIndicators, ConstantModelType } from "ti-engine";\nawait init();\n\nconst periodATR = 14;\nconst atrSeries = otherIndicators.bulk.averageTrueRange(\n  close, // previous closes\n  high,\n  low,\n  ConstantModelType.ExponentialMovingAverage,\n  periodATR\n);\nconsole.log(`ATR(${periodATR}) length:`, atrSeries.length);\nconsole.log("Latest ATR:", atrSeries[atrSeries.length - 1]);\n\n// Note: atrSeries[0] corresponds to close/high/low window [0..periodATR-1], anchored at index periodATR-1\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"\ufe0f-alignment-and-windows",children:"\ud83d\udee0\ufe0f Alignment and windows"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Bulk outputs shrink: length = L - N + 1 for a window N over L inputs."}),"\n",(0,t.jsxs)(n.li,{children:["For i from 0 to L - N:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"bulkOut[i] corresponds to input slice inputs[i..i+N-1]"}),"\n",(0,t.jsx)(n.li,{children:"\u201cAnchors\u201d at inputs[i + N - 1] (the right edge of each rolling window)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-single-vs-bulk--when-to-choose",children:"\ud83e\uddea Single vs Bulk \u2014 when to choose"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"single: one full-window value (e.g., latest signal, dashboard, streaming tick updates)"}),"\n",(0,t.jsx)(n.li,{children:"bulk: historical series over rolling windows (e.g., chart overlays, backtests, feature engineering)"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"\ufe0f-tips",children:"\u2699\ufe0f Tips"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Always await init() in browsers (it loads the WebAssembly module)."}),"\n",(0,t.jsx)(n.li,{children:"Use number[] or Float64Array. For large series, consider chunking to amortize crossings."}),"\n",(0,t.jsx)(n.li,{children:"Consistency matters: arrays for multi-input indicators (e.g., ATR) must be the same length."}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-next-step",children:"\u2705 Next step"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/docs/docs/tutorials/plotting",children:"Plot your indicators"})}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Happy analyzing! \ud83e\udd80\ud83d\udcc8"})]})}function g(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>o});var s=i(6540);const t={},l=s.createContext(t);function r(e){const n=s.useContext(l);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);