"use strict";(self.webpackChunkti_engine_docs=self.webpackChunkti_engine_docs||[]).push([[361],{2939:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"index","title":"TI Engine","description":"TI Engine is a fast, type\u2011safe technical analysis toolkit for JavaScript/TypeScript. It\u2019s built in Rust, compiled to WebAssembly, and exposed through a clean TS API. Use it to compute classic indicators (RSI, MACD, Bollinger Bands, ADX, ATR, etc.), bands and envelopes, McGinley Dynamic variants, Ichimoku, trend breakdowns, correlation, and more.","source":"@site/docs/index.md","sourceDirName":".","slug":"/","permalink":"/ti-engine/docs/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","next":{"title":"Tutorials","permalink":"/ti-engine/docs/tutorials/"}}');var t=i(4848),l=i(8453);const r={},o="TI Engine",a={},d=[{value:"Quick start",id:"quick-start",level:2},{value:"Concepts and structure",id:"concepts-and-structure",level:2},{value:"Usage notes",id:"usage-notes",level:2},{value:"Tutorials",id:"tutorials",level:2},{value:"How\u2011to guides",id:"howto-guides",level:2},{value:"API reference",id:"api-reference",level:2},{value:"Contributing",id:"contributing",level:2},{value:"License",id:"license",level:2}];function c(e){const n={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"ti-engine",children:"TI Engine"})}),"\n",(0,t.jsx)(n.p,{children:"TI Engine is a fast, type\u2011safe technical analysis toolkit for JavaScript/TypeScript. It\u2019s built in Rust, compiled to WebAssembly, and exposed through a clean TS API. Use it to compute classic indicators (RSI, MACD, Bollinger Bands, ADX, ATR, etc.), bands and envelopes, McGinley Dynamic variants, Ichimoku, trend breakdowns, correlation, and more."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Runs in Node and the browser"}),"\n",(0,t.jsx)(n.li,{children:"Strongly typed API with rich JSDoc"}),"\n",(0,t.jsx)(n.li,{children:"Single-value and rolling/bulk variants for most indicators"}),"\n",(0,t.jsx)(n.li,{children:"Designed for performance and predictable windowing semantics"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"quick-start",children:"Quick start"}),"\n",(0,t.jsx)(n.p,{children:"Install:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm install ti-engine\n# or\nyarn add ti-engine\n# or\npnpm add ti-engine\n"})}),"\n",(0,t.jsx)(n.p,{children:"Initialize and use:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'import init, {\n  ConstantModelType,\n  DeviationModel,\n  standardIndicators,\n  momentumIndicators,\n  candleIndicators,\n} from "ti-engine";\n\n// Browser: must await init(); Node: it\'s a no-op but safe to call.\nawait init();\n\n// Example data\nconst prices = [/* ...close prices... */];\nconst highs  = [/* ... */];\nconst lows   = [/* ... */];\nconst close  = [/* ... */];\n\n// 1) Standard RSI (14) using Smoothed MA\n// single.rsi expects exactly 14 values for the standard definition.\nconst rsi14 = standardIndicators.single.rsi(prices.slice(-14));\n\n// 2) Rolling RSI with custom model/period; take the latest value\nconst rsiSeries = momentumIndicators.bulk.relativeStrengthIndex(\n  prices,\n  ConstantModelType.SmoothedMovingAverage,\n  14\n);\nconst latestRsi = rsiSeries.at(-1);\n\n// 3) Standard Bollinger Bands (20 SMA, \xb12 StdDev) on the last 20 bars\nconst [bbLower, bbMid, bbUpper] = standardIndicators.single.bollingerBands(\n  prices.slice(-20)\n);\n\n// 4) Keltner Channel (EMA center, SMA ATR) over a 20-bar window; take the latest\nconst keltner = candleIndicators.bulk.keltnerChannel(\n  highs, lows, close,\n  ConstantModelType.ExponentialMovingAverage, // typical price center\n  ConstantModelType.SimpleMovingAverage,      // ATR smoothing\n  2.0,                                        // width multiplier\n  20\n).at(-1);\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"concepts-and-structure",children:"Concepts and structure"}),"\n",(0,t.jsx)(n.p,{children:"Each indicator family exposes:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"single: computes a single value from the full window you pass in"}),"\n",(0,t.jsx)(n.li,{children:"bulk: computes rolling values over a sliding window"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Available modules:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Candle indicators: Envelopes, Bands (StdDev/MAD/MAD-Median/ModeAD/Ulcer), Donchian, Keltner, Supertrend, Ichimoku"}),"\n",(0,t.jsx)(n.li,{children:"Momentum: RSI, Stochastics (fast/slow/slowest), Williams %R, MFI, RoC, OBV, CCI, MACD and variants (including McGinley and PPO), Chaikin Oscillator, CMO"}),"\n",(0,t.jsx)(n.li,{children:"Trend: Aroon (Up/Down/Oscillator), Parabolic SAR (Wilder variant), DMS (+DI, \u2212DI, ADX, ADXR), Volume Price Trend, True Strength Index"}),"\n",(0,t.jsx)(n.li,{children:"Strength: Accumulation/Distribution, Positive/Negative Volume Index, Relative Vigor Index"}),"\n",(0,t.jsx)(n.li,{children:"Volatility: Ulcer Index, Wilder\u2019s volatility system"}),"\n",(0,t.jsx)(n.li,{children:"Correlation: Rolling/single price correlation with configurable central/deviation models"}),"\n",(0,t.jsx)(n.li,{children:"Moving average utilities: SMA, Smoothed, EMA, McGinley Dynamic (single and rolling)"}),"\n",(0,t.jsx)(n.li,{children:"Chart trends: Peaks, valleys, OLS trend lines, and automatic trend range breakdowns"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Key types (re-exported for convenience):"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"ConstantModelType: SimpleMovingAverage, SmoothedMovingAverage, ExponentialMovingAverage, SimpleMovingMedian, SimpleMovingMode"}),"\n",(0,t.jsx)(n.li,{children:"DeviationModel: StandardDeviation, MeanAbsoluteDeviation, MedianAbsoluteDeviation, ModeAbsoluteDeviation, UlcerIndex"}),"\n",(0,t.jsx)(n.li,{children:"MovingAverageType: Simple | Smoothed | Exponential"}),"\n",(0,t.jsx)(n.li,{children:"Position: Long | Short (for SAR systems)"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"usage-notes",children:"Usage notes"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Windowing: For bulk APIs with a period N and input length L, output length is L \u2212 N + 1."}),"\n",(0,t.jsx)(n.li,{children:"Alignment: The i-th output corresponds to input window [i..i+N\u22121]."}),"\n",(0,t.jsx)(n.li,{children:"Typed arrays: number[] and Float64Array are both accepted."}),"\n",(0,t.jsx)(n.li,{children:"OHLC alignment: Arrays such as highs/lows/close must have equal lengths."}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"tutorials",children:"Tutorials"}),"\n",(0,t.jsx)(n.p,{children:"Dive in with step\u2011by\u2011step guides."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/ti-engine/docs/tutorials/getting-started",children:"01 - Getting started with ti-engine"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/ti-engine/docs/tutorials/plotting",children:"02 - Visualizing Indicators with Plotly"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/ti-engine/docs/tutorials/advanced",children:"03 - More advanced use cases"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/ti-engine/docs/tutorials/api",children:"04 - Getting data from an API"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/ti-engine/docs/tutorials/websockets",children:"05 - Real-time updates with WebSockets (single vs bulk)"})}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"howto-guides",children:"How\u2011to guides"}),"\n",(0,t.jsx)(n.p,{children:"Task\u2011oriented recipes and snippets."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/ti-engine/docs/howto/bulk-vs-single",children:"Bulk vs Single Functions"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/ti-engine/docs/howto/choose-constant-model",children:"Choose Constant Model Type"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/ti-engine/docs/howto/choose-deviation-model",children:"Choose Deviation Model"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/ti-engine/docs/howto/choose-period",children:"Choose Period"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/ti-engine/docs/howto/mcginley-dynamic",children:"McGinley Dynamic Bands"})}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"api-reference",children:"API reference"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"api/index",children:"API docs"})}),"\n",(0,t.jsx)(n.p,{children:"For raw type declarations, see:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Source: ",(0,t.jsx)(n.a,{href:"https://github.com/chironmind/ti-engine/blob/main/index.d.ts",children:"https://github.com/chironmind/ti-engine/blob/main/index.d.ts"})]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"contributing",children:"Contributing"}),"\n",(0,t.jsxs)(n.p,{children:["Issues, feature requests, and contributions are welcome.",(0,t.jsx)(n.br,{}),"\n","Repository: ",(0,t.jsx)(n.a,{href:"https://github.com/chironmind/ti-engine",children:"https://github.com/chironmind/ti-engine"})]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"license",children:"License"}),"\n",(0,t.jsx)(n.p,{children:"MIT"})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>o});var s=i(6540);const t={},l=s.createContext(t);function r(e){const n=s.useContext(l);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);